/* tslint:disable */
/* eslint-disable */
/**
 * api/v1/api.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Helm } from './Helm';
import {
    HelmFromJSON,
    HelmFromJSONTyped,
    HelmToJSON,
} from './Helm';

/**
 * 
 * @export
 * @interface Source
 */
export interface Source {
    /**
     * 
     * @type {string}
     * @memberof Source
     */
    repoUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof Source
     */
    path?: string;
    /**
     * 
     * @type {string}
     * @memberof Source
     */
    targetRevision?: string;
    /**
     * 
     * @type {Helm}
     * @memberof Source
     */
    helm?: Helm;
}

/**
 * Check if a given object implements the Source interface.
 */
export function instanceOfSource(value: object): value is Source {
    return true;
}

export function SourceFromJSON(json: any): Source {
    return SourceFromJSONTyped(json, false);
}

export function SourceFromJSONTyped(json: any, ignoreDiscriminator: boolean): Source {
    if (json == null) {
        return json;
    }
    return {
        
        'repoUrl': json['repoUrl'] == null ? undefined : json['repoUrl'],
        'path': json['path'] == null ? undefined : json['path'],
        'targetRevision': json['targetRevision'] == null ? undefined : json['targetRevision'],
        'helm': json['helm'] == null ? undefined : HelmFromJSON(json['helm']),
    };
}

export function SourceToJSON(value?: Source | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'repoUrl': value['repoUrl'],
        'path': value['path'],
        'targetRevision': value['targetRevision'],
        'helm': HelmToJSON(value['helm']),
    };
}

